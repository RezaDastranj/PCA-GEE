[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Forecasting Mortality Rates: A Stochastic PCA-GEE Model",
    "section": "",
    "text": "Principal Component Analysis (PCA) is a widely used technique in exploratory data analysis, visualization, and data preprocessing, leveraging the concept of variance to identify key dimensions in datasets. In this study, we focus on the first principal component, which represents the direction maximizing the variance of projected data. We extend the application of PCA by treating its first principal component as a covariate and integrating it with Generalized Estimating Equations (GEE) for analyzing age-specific death rates (ASDRs) in longitudinal datasets. GEE models are chosen for their robustness in handling correlated data, particularly suited for situations where traditional models assume independence among observations, which may not hold true in longitudinal data. We propose distinct GEE models tailored for single and multipopulation ASDRs, accommodating various correlation structures such as independence, AR(1), and exchangeable, thus offering a comprehensive evaluation of model efficiency. Our study critically evaluates the strengths and limitations of GEE models in mortality forecasting, providing empirical evidence through detailed model specifications and practical illustrations. We compare the forecast accuracy of our PCA-GEE approach with the Li-Lee (LL) and Lee-Carter (LC) models, demonstrating its superior predictive performance. Our findings contribute to an enhanced understanding of the nuanced capabilities of GEE models in mortality rate prediction, highlighting the potential of integrating PCA with GEE for improved forecasting accuracy and reliability.\nKeywords: Mortality forecasting, Longitudinal analysis, Generalized estimating equations, Principal component analysis, Random walks with drift.\nFor more details, refer to the related paper: Forecasting Mortality Rates: A Stochastic PCA-GEE Model:\nhttps://ssrn.com/abstract=4806376"
  },
  {
    "objectID": "index.html#list-of-dataset-filenames",
    "href": "index.html#list-of-dataset-filenames",
    "title": "Forecasting Mortality Rates: A Stochastic PCA-GEE Model",
    "section": "List of Dataset Filenames",
    "text": "List of Dataset Filenames\n\n# log(q_{cgxt}) values for the years 1991 to 2019\nload(\"dat.RData\")\n# log(q_{cgxt}) values for the years 1991 to 2010\nload(\"dattrn.RData\")\n\n\nM0 &lt;- dat\nMB0 &lt;- do.call(cbind, M0)\n\n\nt &lt;- 20\n\nM &lt;- dattrn\nMB &lt;- do.call(cbind, M)"
  },
  {
    "objectID": "index.html#plot-of-k_ct",
    "href": "index.html#plot-of-k_ct",
    "title": "Forecasting Mortality Rates: A Stochastic PCA-GEE Model",
    "section": "Plot of \\(k_{ct}\\)",
    "text": "Plot of \\(k_{ct}\\)\n\n# Create a new data frame 'ASDRsnw' by converting the 'year' column to numeric\nASDRsnw &lt;- ASDRs %&gt;%\n  mutate(year = as.numeric(as.character(year)))\n\n\n# Rename the 9th column to \"PC1\"\ncolnames(ASDRsnw)[9] &lt;- \"PC1\"\n\n# Generate a ggplot with points and lines\nggplot(ASDRsnw) +\n  # Add points to the plot with year on the x-axis, kc1 on the y-axis, and color based on 'PC1'\n  geom_point(aes(x = year, y = kc1, color = PC1), size = 1.6) +\n  \n  # Add lines to the plot connecting the points with the same x and y aesthetics\n  geom_line(aes(x = year, y = kc1, color = PC1), linewidth = .8) +\n  \n  # Manually set the colors for the 'PC1' groups\n  scale_color_manual(values = c(\"Group[0,14]\" = \"red\", \"Group[15,40]\" = \"green\", \"Group[41,80]\" = \"blue\")) +\n  \n  # Set the labels for the x and y axes\n  xlab(\"Year\") +  \n  ylab(\"Value\") + \n  \n  # Create a facet grid for the plot by 'Country'\n  facet_grid(~Country) +\n  \n  # Apply a clean, white background theme to the plot\n  theme_bw() +\n  \n  # Customize the legend to have larger points\n  guides(color = guide_legend(override.aes = list(size = 3))) +\n  \n  # Rotate the x-axis text labels to be vertical and adjust their alignment\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  \n  # Set the font size of the x-axis text labels\n  theme(axis.text.x = element_text(size = 20)) +\n  \n  # Set the font size of the y-axis text labels\n  theme(axis.text.y = element_text(size = 25)) +\n  \n  # Set the font size of the legend text\n  theme(legend.text = element_text(size = 35)) +\n  \n  # Set the font size of the axis titles\n  theme(axis.title = element_text(size = 25)) +\n  \n  # Set the font size of the strip text (facet labels)\n  theme(strip.text = element_text(size = 35)) +\n  \n  # Set the font size of the legend title\n  theme(legend.title = element_text(size = 20)) +\n  \n  # Position the legend at the bottom of the plot\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "PCA-GEE Modelling Mortality"
  },
  {
    "objectID": "index.html#sec2",
    "href": "index.html#sec2",
    "title": "Forecasting Mortality Rates: Unveiling Patterns with a PCA-GEE Approach",
    "section": "Generalized Estimating Equations",
    "text": "Generalized Estimating Equations\nLet ( i = (y{i1}, , y_{in_i})^T ) represent the ( n_i ) vector of outcome values, and let ( i = (x{i1}, , x_{in_i})^T ) denote the ( n_i p ) matrix of covariate values for the ( i )th subject, where ( i = 1, , K ). According to , the marginal density of the outcome ( y_{it} ) is given by\n[ f(y_{it}) = , ] \nwhere ( = h() ), ( = ), and ( ) is a ( p ) vector of parameters. The first two moments of ( y_{it} ) under this formulation are:\n[ (y_{it}) = a’(),* (y{it}) = . ] \nFor simplicity, we may assume ( n_i = n ) without loss of generality.\nNext, consider ( R() ) as an ( n n ) symmetric matrix that satisfies the conditions of a correlation matrix, where ( ) is an ( s ) vector that fully characterizes ( R() ). This matrix ( R() ) is referred to as a “working” correlation matrix.\n define\n[ V_i = A_i^{} R() A_i^{} / , ] \nwhere for each ( i ) the ( n n ) diagonal matrix ( A_i = ). ( V_i ) represents the covariance matrix ( (Y_i) ) if ( R() ) is the true correlation matrix for the ( Y_i )s.\nThe general estimating equations are formulated as:\n[ _{i=1}^{K} D_i^T V_i^{-1} S_i = 0, ] \nwhere ( D_i = = A_i _i _i ), ( _i = () ). The vector ( S_i = Y_i - a’_i(_i) ) is of dimension ( n ) for the ( i )th subject. The estimate ( ) is obtained from solving the generalized estimating equations \\(\\eqref{Eq:6}\\).\n\nCorrelation Structures in GEE\nIn the context of Generalized Estimating Equations (GEE), the correlation structure ( R() R ) plays a crucial role in accounting for the within-subject correlation in repeated measures data. Different choices of the correlation matrix can reflect different assumptions about the nature of the correlation among the repeated observations for a given subject. Below are some common examples of correlation structures:\n\nIndependence: Assumes that the repeated measurements within a subject are uncorrelated, with ( R_{jj’} = 0 ). This is a simple structure and is often used as a baseline model.\nExchangeability: Describes a situation where the correlation between any two repeated measurements is constant, denoted by ( R_{jj’} = ), regardless of the time points at which they were taken. This structure is also known as compound symmetry.\nAutoregressive of Order 1 (AR1): Characterized by a correlation that decays as the time interval between repeated measurements increases. This is represented as ( R_{jj’} = ^{|j-j’|} ) and is particularly useful for longitudinal data where observations closer in time are expected to be more strongly correlated.\nUnstructured: Allows for a completely general form of correlation among repeated measurements, with ( R_{jj’} = _{jj’} ). While this structure is highly flexible, it can be computationally intensive, especially with a large number of time points.\n\nThese correlation structures allow the GEE method to be tailored to the specific nature of the data at hand, ensuring that the within-subject correlations are appropriately modeled."
  }
]